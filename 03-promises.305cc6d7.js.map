{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAIbL,EAAKa,iBAAiB,UAAUC,MAAOC,IACnCA,EAAEC,iBAEF,MAAMC,EAAQC,SAASlB,EAAKmB,SAASd,MAAMe,OACrCC,EAAOH,SAASlB,EAAKmB,SAASE,KAAKD,OACnCE,EAASJ,SAASlB,EAAKmB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BpB,EAAcoB,EAAI,EADS,IAANA,EAAUN,EAAQA,EAAQM,EAAIF,GAElDG,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACfoB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAE3EuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAChBoB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G,CAI3EL,EAAK8B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', async (e) => {\n    e.preventDefault();\n  \n    const delay = parseInt(form.elements.delay.value);\n    const step = parseInt(form.elements.step.value);\n    const amount = parseInt(form.elements.amount.value);\n\n    for (let i = 0; i < amount; i++) {\n      const promiseDelay = i === 0 ? delay : delay + i * step;\n      createPromise(i + 1, promiseDelay)\n      .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n    \n    form.reset();\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","async","e","preventDefault","delay1","parseInt","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.305cc6d7.js.map"}